@model mukatalev1._0.Models.PostCommentReplyViewModel
@{
     ViewBag.Title = Model.Post.Title;
}
<br/>
<br />
<br />
<div>
    <hr />
    <div class="Post">
        <div class="Title">
            @Html.ActionLink(Model.Post.Title, "Index", "Posts")
        </div>
        <div class="Description">
            @Html.DisplayFor(model => model.Post.Description)
        </div>
        <div class="price">
            Ebbeyi: @Html.DisplayFor(model => model.Post.Price) UGX
        </div>
        <img class="Image" src="~/Images/@Html.DisplayFor(model => model.Post.Image)" alt="no" />
        <div class="location">
            Post by: @Html.DisplayFor(model => model.UserTag)
            <br/>
            Location : @Html.DisplayFor(model => model.Post.Market)
        </div>
        <div class="createdat">
            @Html.DisplayFor(model => model.Post.CreatedAt)
        </div>
        <div class="comment-contact">
            +256 @Html.DisplayFor(model => model.Post.Contact)
        </div>
    </div>
</div>
<br/>
    @if (Model.CommentReply != null)
    {
        foreach (var item in Model.CommentReply)
        {
            <div class="comment-block">
                <div class="comment">
                    @Html.DisplayFor(modelItem => item.Comment.Text)
                </div>
                <div class="comment-username">@Html.DisplayFor(modelItem => item.UserTagComment)</div>
                <div class="comment-date">
                    @Html.DisplayFor(modelItem => item.Comment.CreatedAt)
                </div>
                @if (item.reply != null)
                {
                    foreach (var reply in item.reply)
                    {
                <div class="reply-block">
                    <div class="reply" style="">
                        @Html.DisplayFor(modelItem => reply.Text)
                    </div>
                    <div class="reply-date">
                        @Html.DisplayFor(modelItem => reply.CreatedAt)
                    </div>
                    <div class="reply-username">
                        @Html.DisplayFor(modelItem => reply.Username)
                    </div>
                </div>
                <br />
                    }

                }
                
                @if (item.Comment.UserId == Microsoft.AspNet.Identity.IdentityExtensions.GetUserId(User.Identity))
                {<button class="delete-block">
    @Html.ActionLink("Delete", "Delete", "Comments", new { id = item.Comment.Id }, new { @class = "delete-comment" })
</button>}
                 <button class="reply-button">
                     @Ajax.ActionLink("Reply", "Create", "Replies",
                                  new { commentId = item.Comment.Id, PostId = Model.Post.Id },
                                  new AjaxOptions { UpdateTargetId = @item.Comment.Id.ToString() })
                 </button>
                <div id=@item.Comment.Id.ToString()>
                </div>
            </div>
            <br />
        }
    }

@Html.Action("Create", "Comments", new { PostId = Model.Post.Id })
<div class="methods">
    @if(User.Identity.Name == Model.Post.User.UserName) {
    @Html.ActionLink("Kyusa", "Edit", new { id = Model.Post.Id }) 
    @Html.ActionLink("Sangula", "Delete", new { id = Model.Post.Id })}

    @Html.ActionLink("Dayo Ewasokelwa", "Index", "Posts")
</div>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>


